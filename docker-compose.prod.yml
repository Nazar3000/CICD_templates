version: "3.9"

services:
  web-app:
    image: "${WEB_IMAGE}"
    expose:
      - "8000"
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
#    env_file: .env
    environment:
      - DB_HOST=database
      - DB_NAME=dbname
      - DB_USER=dbuser
      - DB_PASS=pass
    depends_on:
      - database

  database:
    image: "${DB_IMAGE}"
#    env_file: .env
    environment:
      - POSTGRES_DB=dbname
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=pass
    ports:
      - "54321:5432"

  nginx:
    image: "${NGINX_IMAGE}"
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    ports:
      - "80:80"
    depends_on:
      - web-app

  redis:
    image: "${REDIS_IMAGE}"
    expose:
      - "6379"
    command: [ "/tmp/redis.conf" ]
    restart: always
    hostname: redis

  worker:
    image: "${WORKER_IMAGE}"
    hostname: worker
    entrypoint: celery
    command: -A celery_app.app worker --loglevel=info
#    env_file: .env
    environment:
      - DB_HOST=database
      - DB_NAME=dbname
      - DB_USER=dbuser
      - DB_PASS=pass
    links:
      - redis
    depends_on:
      - redis
      - database

  worker2:
    image: "${WORKER_IMAGE2}"
    hostname: worker2
    entrypoint: celery
    command: -A celery_app.app worker --loglevel=info
#    env_file: .env
    environment:
      - DB_HOST=database
      - DB_NAME=dbname
      - DB_USER=dbuser
      - DB_PASS=pass
    links:
      - redis
    depends_on:
      - redis
      - database


volumes:
  static_volume:
  media_volume: