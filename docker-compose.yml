version: "3.9"

services:
  web-app:
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile.dev
    ports:
      - "80:8000"
    volumes:
      - ./service:/usr/src/app
    environment:
      - DB_HOST=database
      - DB_NAME=dbname
      - DB_USER=dbuser
      - DB_PASS=pass
    depends_on:
      - database

  database:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=dbname
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=pass
    volumes:
      - ./postgres_passport:/docker-entrypoint-initdb.d
      - ./postgres_data:/var/lib/postgresql/data
    ports:
      - "54321:5432"

  redis:
    build:
      context: ./docker/redis
    expose:
      - 6379
    command: [ "/tmp/redis.conf" ]
    restart: always
    hostname: redis

  worker:
    build:
      context: .
      dockerfile: docker/app/Dockerfile.dev
    hostname: worker
    entrypoint: celery
    command: -A celery_app.app worker --loglevel=info
    environment:
      - DB_HOST=database
      - DB_NAME=dbname
      - DB_USER=dbuser
      - DB_PASS=pass
    volumes:
      - ./service:/usr/src/app
    links:
      - redis
    depends_on:
      - redis
      - database

  worker2:
    build:
      context: .
      dockerfile: docker/app/Dockerfile.dev
    hostname: worker2
    entrypoint: celery
    command: -A celery_app.app worker --loglevel=info
    environment:
      - DB_HOST=database
      - DB_NAME=dbname
      - DB_USER=dbuser
      - DB_PASS=pass
    volumes:
      - ./service:/usr/src/app
    links:
      - redis
    depends_on:
      - redis
      - database

  flower:
    build:
      context: .
      dockerfile: docker/app/Dockerfile.dev

    hostname: flower
    entrypoint: celery
    command: -A celery_app.app flower
    volumes:
      - ./service:/usr/src/app
    links:
      - redis
    depends_on:
      - redis
    ports:
      - "5555:5555"

volumes:
  web-app:
  postgres_data: